{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/searchBox/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","resp","json","user","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,mBACtB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,UAHeP,EAAMI,QAAQC,KCD9CG,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GACnB,OACI,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCP1BM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4C9CG,E,kDAzCb,WAAYhB,GAAQ,IAAD,8BACjB,gBAkBFa,aAAe,SAACI,GACd,EAAKC,SAAS,CACZC,YAAcF,EAAEG,OAAOC,QAEzBC,QAAQC,IAAI,QApBZ,EAAKC,MAAQ,CACXf,SAAU,GACVU,YAAa,IALE,E,qDAQnB,WAAsB,IAAD,OACjBM,MAAM,+CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAACG,GACHP,QAAQC,IAAIM,GACZ,EAAKX,SAAS,CACZT,SAAUoB,S,oBAYpB,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUU,EADX,EACWA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA5B,GACvC,OAAQA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAE1D,OACE,sBAAKhC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAWW,YAAY,gBAAgBC,aAAciB,KAAKjB,eAC1D,cAAC,EAAD,CAAUJ,SAAUsB,W,GApCVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.23bf354f.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nexport const Card = (props) => {\n    return(\n        <div className=\"container-card\" key={props.monster.id}>\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?size=180x180`} ></img>\n            <h2 key={props.monster.id}>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}","import React from 'react';\nimport './card-list.css';\nimport { Card } from '../card/card.jsx';\n\nexport const CardList = (props) => {\n    return(\n        <div className=\"card-list\">\n            {props.monsters.map((monster) => {\n              return (\n                  <Card key = {monster.id} monster = {monster} />\n              )\n          })}\n        </div>\n    )\n}","import React from 'react';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input type=\"search\" placeholder={placeholder} onChange={handleChange}/>\n)","import React from 'react';\nimport {CardList} from './components/card-list/card-list';\nimport './App.css';\nimport {SearchBox} from './components/searchBox/search-box.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount () {\n      fetch('https://jsonplaceholder.typicode.com/users/')\n      .then(resp => resp.json())\n      .then((user) => {\n          console.log(user);\n          this.setState({\n            monsters: user\n          });\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      searchField : e.target.value\n    });\n    console.log('hey')\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return (monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monster Finder</h1>\n        <SearchBox placeholder=\"Find monsters\" handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}